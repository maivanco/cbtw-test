services:
  wordpress:
    build:
      context: .
    env_file:  # both docker and wordpress container can use this file
      - .env
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}

    volumes:
      - ./wp:/var/www/html                             
      - ./themes:/var/www/html/wp-content/themes       
      - ./plugins:/var/www/html/wp-content/plugins
      - ./wp-config.php:/var/www/html/wp-config.php 
    depends_on:
      - db

  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    volumes:
      - ./wp:/var/www/html
      - ./themes:/var/www/html/wp-content/themes       
      - ./plugins:/var/www/html/wp-content/plugins
      - ./wp-config.php:/var/www/html/wp-config.php 
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - wordpress

  db:
    image: mysql:8.0.34
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${WORDPRESS_DB_NAME}
      MYSQL_USER: ${WORDPRESS_DB_USER}
      MYSQL_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db_data:/var/lib/mysql
      - ./db_init:/docker-entrypoint-initdb.d

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1

volumes:
  db_data: